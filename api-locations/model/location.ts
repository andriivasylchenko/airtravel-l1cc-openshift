/**
 * Airport & City Search
 *  Before using this API, we recommend you read our **[Authorization Guide](https://developers.amadeus.com/self-service/apis-docs/guides/authorization)** for more information on how to generate an access token.   Please also be aware that our test environment is based on a subset of the production, in test this API only contains data from the United States, Spain, United Kingdom, Germany and India. 
 *
 * OpenAPI spec version: 1.2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { Address } from './address';
import { Analytics } from './analytics';
import { Distance } from './distance';
import { GeoCode } from './geoCode';
import { Links } from './links';


export interface Location { 
    /**
     * id of the ressource
     */
    id?: string;
    self?: Links;
    /**
     * the resource name
     */
    type?: string;
    /**
     * location sub type
     */
    subType?: Location.SubTypeEnum;
    /**
     * short name of the location
     */
    name?: string;
    /**
     * detailed name of the location. For a city location it contains city name and country code. For an airport location it contains city name; country code and airport full name
     */
    detailedName?: string;
    /**
     * timezone offset of the location at the date of the API call (including daylight saving time)
     */
    timeZoneOffset?: string;
    /**
     * IATA code of the location. ([IATA table codes](http://www.iata.org/publications/Pages/code-search.aspx) here)
     */
    iataCode?: string;
    geoCode?: GeoCode;
    address?: Address;
    distance?: Distance;
    analytics?: Analytics;
    /**
     * score value calculated based on distance and analytics
     */
    relevance?: number;
    /**
     * category of the location
     */
    category?: Location.CategoryEnum;
    /**
     * list of tags related to the location
     */
    tags?: Array<string>;
    /**
     * the rank is the position compared to other locations based on how famous is a place. 1 being the highest.
     */
    rank?: string;
}
export namespace Location {
    export type SubTypeEnum = 'AIRPORT' | 'CITY' | 'POINT_OF_INTEREST' | 'DISTRICT';
    export const SubTypeEnum = {
        AIRPORT: 'AIRPORT' as SubTypeEnum,
        CITY: 'CITY' as SubTypeEnum,
        POINTOFINTEREST: 'POINT_OF_INTEREST' as SubTypeEnum,
        DISTRICT: 'DISTRICT' as SubTypeEnum
    };
    export type CategoryEnum = 'SIGHTS' | 'BEACH_PARK' | 'HISTORICAL' | 'NIGHTLIFE' | 'RESTAURANT' | 'SHOPPING';
    export const CategoryEnum = {
        SIGHTS: 'SIGHTS' as CategoryEnum,
        BEACHPARK: 'BEACH_PARK' as CategoryEnum,
        HISTORICAL: 'HISTORICAL' as CategoryEnum,
        NIGHTLIFE: 'NIGHTLIFE' as CategoryEnum,
        RESTAURANT: 'RESTAURANT' as CategoryEnum,
        SHOPPING: 'SHOPPING' as CategoryEnum
    };
}
